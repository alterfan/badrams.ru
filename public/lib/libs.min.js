$(document).ready(function() {
    $(window).scroll(function() {
        $(this).scrollTop() > 300 ? $("#up-btn").fadeIn() : $("#up-btn").fadeOut()
    }), $("#up-btn").click(function() {
        return $("body,html").animate({
            scrollTop: 0
        }, 500), !1
    })
}), (() => {
    const t = document.getElementsByClassName("form__control"),
        e = document.getElementsByClassName("form__label");
    for (let n = 0; n < t.length; n++) t[n].addEventListener("focus", () => {
        e[n].classList.add("form__label_active")
    }), t[n].addEventListener("focusout", () => {
        "" == t[n].value && e[n].classList.remove("form__label_active")
    })
})(), (() => {
    document.getElementsByClassName("m-menu__open")[0];
    const t = document.getElementsByClassName("m-menu__link");
    let e = document.getElementsByClassName("m-menu__close")[0],
        n = document.getElementsByClassName("m-menu")[0];
    e.onclick = (t => {
        t.preventDefault(), n.classList.remove("m-menu_active"), document.body.classList.toggle("body_ovr_hidden")
    });
    for (let e = 0; e < t.length; e++) t[e].addEventListener("click", () => {
        n.classList.toggle("m-menu_active"), document.body.classList.toggle("body_ovr_hidden")
    })
})();
let canvas = document.getElementById("nokey"),
    can_w = parseInt(canvas.getAttribute("width")),
    can_h = parseInt(canvas.getAttribute("height")),
    ctx = canvas.getContext("2d"),
    ball = {
        x: 0,
        y: 0,
        vx: 0,
        vy: 0,
        r: 0,
        alpha: 1,
        phase: 0
    },
    ball_color = {
        r: 207,
        g: 255,
        b: 4
    },
    R = 2,
    balls = [],
    alpha_f = .03,
    alpha_phase = 0,
    link_line_width = .8,
    dis_limit = 260,
    add_mouse_point = !0,
    mouse_in = !1,
    mouse_ball = {
        x: 0,
        y: 0,
        vx: 0,
        vy: 0,
        r: 0,
        type: "mouse"
    };
const getRandomSpeed = t => {
        switch (t) {
            case "top":
                return [randomNumFrom(-1, 1), randomNumFrom(.1, 1)];
            case "right":
                return [randomNumFrom(-1, -.1), randomNumFrom(-1, 1)];
            case "bottom":
                return [randomNumFrom(-1, 1), randomNumFrom(-1, -.1)];
            case "left":
                return [randomNumFrom(.1, 1), randomNumFrom(-1, 1)];
            default:
                return
        }
    },
    randomArrayItem = t => t[Math.floor(Math.random() * t.length)],
    randomNumFrom = (t, e) => Math.random() * (e - t) + t,
    getRandomBall = () => {
        switch (randomArrayItem(["top", "right", "bottom", "left"])) {
            case "top":
                return {
                    x: randomSidePos(can_w), y: -R, vx: getRandomSpeed("top")[0], vy: getRandomSpeed("top")[1], r: R, alpha: 1, phase: randomNumFrom(0, 10)
                };
            case "right":
                return {
                    x: can_w + R, y: randomSidePos(can_h), vx: getRandomSpeed("right")[0], vy: getRandomSpeed("right")[1], r: R, alpha: 1, phase: randomNumFrom(0, 10)
                };
            case "bottom":
                return {
                    x: randomSidePos(can_w), y: can_h + R, vx: getRandomSpeed("bottom")[0], vy: getRandomSpeed("bottom")[1], r: R, alpha: 1, phase: randomNumFrom(0, 10)
                };
            case "left":
                return {
                    x: -R, y: randomSidePos(can_h), vx: getRandomSpeed("left")[0], vy: getRandomSpeed("left")[1], r: R, alpha: 1, phase: randomNumFrom(0, 10)
                }
        }
    },
    randomSidePos = t => Math.ceil(Math.random() * t),
    renderBalls = () => {
        Array.prototype.forEach.call(balls, function(t) {
            t.hasOwnProperty("type") || (ctx.fillStyle = "rgba(" + ball_color.r + "," + ball_color.g + "," + ball_color.b + "," + t.alpha + ")", ctx.beginPath(), ctx.arc(t.x, t.y, R, 0, 2 * Math.PI, !0), ctx.closePath(), ctx.fill())
        })
    },
    updateBalls = () => {
        let t = [];
        Array.prototype.forEach.call(balls, e => {
            e.x += e.vx, e.y += e.vy, e.x > -50 && e.x < can_w + 50 && e.y > -50 && e.y < can_h + 50 && t.push(e), e.phase += alpha_f, e.alpha = Math.abs(Math.cos(e.phase))
        }), balls = t.slice(0)
    },
    renderLines = () => {
        let t, e;
        for (let n = 0; n < balls.length; n++)
            for (let a = n + 1; a < balls.length; a++)(t = getDisOf(balls[n], balls[a]) / dis_limit) < 1 && (e = (1 - t).toString(), ctx.strokeStyle = "rgba(150,150,150," + e + ")", ctx.lineWidth = link_line_width, ctx.beginPath(), ctx.moveTo(balls[n].x, balls[n].y), ctx.lineTo(balls[a].x, balls[a].y), ctx.stroke(), ctx.closePath())
    },
    getDisOf = (t, e) => {
        let n = Math.abs(t.x - e.x),
            a = Math.abs(t.y - e.y);
        return Math.sqrt(n * n + a * a)
    };
function addBallIfy() {
    balls.length < 20 && balls.push(getRandomBall())
}
function render() {
    ctx.clearRect(0, 0, can_w, can_h), renderBalls(), renderLines(), updateBalls(), addBallIfy(), window.requestAnimationFrame(render)
}
function initBalls(t) {
    for (var e = 1; e <= t; e++) balls.push({
        x: randomSidePos(can_w),
        y: randomSidePos(can_h),
        vx: getRandomSpeed("top")[0],
        vy: getRandomSpeed("top")[1],
        r: R,
        alpha: 1,
        phase: randomNumFrom(0, 10)
    })
}
function initCanvas() {
    canvas.setAttribute("width", window.innerWidth), canvas.setAttribute("height", window.innerHeight), can_w = parseInt(canvas.getAttribute("width")), can_h = parseInt(canvas.getAttribute("height"))
}
function goMovie() {
    initCanvas(), initBalls(30), window.requestAnimationFrame(render)
}
window.addEventListener("resize", function(t) {
    console.log("Window Resize..."), initCanvas()
}), goMovie(), canvas.addEventListener("mouseenter", function() {
    mouse_in = !0, balls.push(mouse_ball)
}), canvas.addEventListener("mouseleave", function() {
    mouse_in = !1;
    var t = [];
    Array.prototype.forEach.call(balls, function(e) {
        e.hasOwnProperty("type") || t.push(e)
    }), balls = t.slice(0)
}), canvas.addEventListener("mousemove", function(t) {
    t = t || window.event;
    mouse_ball.x = t.pageX, mouse_ball.y = t.pageY
});
const slowScroll = t => {
    document.querySelector(t).scrollIntoView({
        behavior: "smooth"
    })
};
function validateForm() {
    document.getElementById("status").innerHTML = "Sending...", formData = {
        name: $("input[name=name]").val(),
        email: $("input[name=email]").val(),
        message: $("textarea[name=message]").val()
    }, $.ajax({
        url: "mail.php",
        type: "POST",
        data: formData,
        success: function(t, e, n) {
            $("#status").text(t.message), t.code && $("#myform").closest("form").find("input[type=text], textarea").val("")
        },
        error: function(t, e, n) {
            $("#status").text(t)
        }
    })
}(() => {
    const t = document.getElementsByClassName("circ-btn_value_contacnts")[0],
        e = document.getElementsByClassName("circ-btn_social_watsapp")[0],
        n = document.getElementsByClassName("circ-btn_social_telegram")[0],
        a = document.getElementsByClassName("circ-btn_social_vk")[0],
        o = document.getElementsByClassName("fa-times")[0],
        s = document.getElementsByClassName("fa-envelope")[1];
    t.onclick = (() => {
        e.classList.toggle("circ-btn_hide_first"), n.classList.toggle("circ-btn_hide_second"), a.classList.toggle("circ-btn_hide_third"), t.classList.toggle("circ-btn_animation_true"), t.classList.toggle("circ-btn_closed_true"), o.classList.toggle("fa-times_disp_none"), s.classList.toggle("fa-envelope_disp_none")
    })
})(), $(document).ready(function() {
        let t, e, n, a = $(".random__nbr"),
            o = 0,
            s = ["F", "R", "O", "N", "T", "E", "N", "D", "D", "E", "V", "E", "L", "O", "P", "E", "R"];
        function r() {
            return Math.round(Math.random() * a.length + 1)
        }
        a.each(function() {
            n = Math.round(100 * Math.random()), $(this).attr("data-change", n)
        }), t = setInterval(function() {
            let n = 0;
            $(".random__nbr:nth-child(" + r() + ")").html("" + Math.round(9 * Math.random())), $(".random__nbr:nth-child(" + r() + ")").attr("data-number", o), o++, a.each(function() {
                parseInt($(this).attr("data-number")) > parseInt($(this).attr("data-change")) && (e = $(".random__ltr").index(this), $(this).html(s[e]), $(this).removeClass("random__nbr"))
            });
            for (let t = 0; t < a.length; t++) a[t].innerText == s[t] && n++;
            17 == n && clearTimeout(t)
        }, 15)
    }),
    function() {
        var t, e, n = function(t, e) {
            return function() {
                return t.apply(e, arguments)
            }
        };
        t = function() {
            function t() {}
            return t.prototype.extend = function(t, e) {
                var n, a;
                for (n in t) null != (a = t[n]) && (e[n] = a);
                return e
            }, t.prototype.isMobile = function(t) {
                return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(t)
            }, t
        }(), e = this.WeakMap || (e = function() {
            function t() {
                this.keys = [], this.values = []
            }
            return t.prototype.get = function(t) {
                var e, n, a, o;
                for (e = n = 0, a = (o = this.keys).length; a > n; e = ++n)
                    if (o[e] === t) return this.values[e]
            }, t.prototype.set = function(t, e) {
                var n, a, o, s;
                for (n = a = 0, o = (s = this.keys).length; o > a; n = ++a)
                    if (s[n] === t) return void(this.values[n] = e);
                return this.keys.push(t), this.values.push(e)
            }, t
        }()), this.WOW = function() {
            function a(t) {
                null == t && (t = {}), this.scrollCallback = n(this.scrollCallback, this), this.scrollHandler = n(this.scrollHandler, this), this.start = n(this.start, this), this.scrolled = !0, this.config = this.util().extend(t, this.defaults), this.animationNameCache = new e
            }
            return a.prototype.defaults = {
                boxClass: "wow",
                animateClass: "animated",
                offset: 0,
                mobile: !0
            }, a.prototype.init = function() {
                var t;
                return this.element = window.document.documentElement, "interactive" === (t = document.readyState) || "complete" === t ? this.start() : document.addEventListener("DOMContentLoaded", this.start)
            }, a.prototype.start = function() {
                var t, e, n, a;
                if (this.boxes = this.element.getElementsByClassName(this.config.boxClass), this.boxes.length) {
                    if (this.disabled()) return this.resetStyle();
                    for (e = 0, n = (a = this.boxes).length; n > e; e++) t = a[e], this.applyStyle(t, !0);
                    return window.addEventListener("scroll", this.scrollHandler, !1), window.addEventListener("resize", this.scrollHandler, !1), this.interval = setInterval(this.scrollCallback, 50)
                }
            }, a.prototype.stop = function() {
                return window.removeEventListener("scroll", this.scrollHandler, !1), window.removeEventListener("resize", this.scrollHandler, !1), null != this.interval ? clearInterval(this.interval) : void 0
            }, a.prototype.show = function(t) {
                return this.applyStyle(t), t.className = t.className + " " + this.config.animateClass
            }, a.prototype.applyStyle = function(t, e) {
                var n, a, o, s;
                return a = t.getAttribute("data-wow-duration"), n = t.getAttribute("data-wow-delay"), o = t.getAttribute("data-wow-iteration"), this.animate((s = this, function() {
                    return s.customStyle(t, e, a, n, o)
                }))
            }, a.prototype.animate = "requestAnimationFrame" in window ? function(t) {
                return window.requestAnimationFrame(t)
            } : function(t) {
                return t()
            }, a.prototype.resetStyle = function() {
                var t, e, n, a, o;
                for (o = [], e = 0, n = (a = this.boxes).length; n > e; e++) t = a[e], o.push(t.setAttribute("style", "visibility: visible;"));
                return o
            }, a.prototype.customStyle = function(t, e, n, a, o) {
                return e && this.cacheAnimationName(t), t.style.visibility = e ? "hidden" : "visible", n && this.vendorSet(t.style, {
                    animationDuration: n
                }), a && this.vendorSet(t.style, {
                    animationDelay: a
                }), o && this.vendorSet(t.style, {
                    animationIterationCount: o
                }), this.vendorSet(t.style, {
                    animationName: e ? "none" : this.cachedAnimationName(t)
                }), t
            }, a.prototype.vendors = ["moz", "webkit"], a.prototype.vendorSet = function(t, e) {
                var n, a, o, s;
                for (n in s = [], e) a = e[n], t["" + n] = a, s.push(function() {
                    var e, s, r, i;
                    for (i = [], e = 0, s = (r = this.vendors).length; s > e; e++) o = r[e], i.push(t["" + o + n.charAt(0).toUpperCase() + n.substr(1)] = a);
                    return i
                }.call(this));
                return s
            }, a.prototype.vendorCSS = function(t, e) {
                var n, a, o, s, r, i;
                for (n = (a = window.getComputedStyle(t)).getPropertyCSSValue(e), s = 0, r = (i = this.vendors).length; r > s; s++) o = i[s], n = n || a.getPropertyCSSValue("-" + o + "-" + e);
                return n
            }, a.prototype.animationName = function(t) {
                var e;
                try {
                    e = this.vendorCSS(t, "animation-name").cssText
                } catch (n) {
                    e = window.getComputedStyle(t).getPropertyValue("animation-name")
                }
                return "none" === e ? "" : e
            }, a.prototype.cacheAnimationName = function(t) {
                return this.animationNameCache.set(t, this.animationName(t))
            }, a.prototype.cachedAnimationName = function(t) {
                return this.animationNameCache.get(t)
            }, a.prototype.scrollHandler = function() {
                return this.scrolled = !0
            }, a.prototype.scrollCallback = function() {
                var t;
                return this.scrolled && (this.scrolled = !1, this.boxes = function() {
                    var e, n, a, o;
                    for (o = [], e = 0, n = (a = this.boxes).length; n > e; e++)(t = a[e]) && (this.isVisible(t) ? this.show(t) : o.push(t));
                    return o
                }.call(this), !this.boxes.length) ? this.stop() : void 0
            }, a.prototype.offsetTop = function(t) {
                for (var e; void 0 === t.offsetTop;) t = t.parentNode;
                for (e = t.offsetTop; t = t.offsetParent;) e += t.offsetTop;
                return e
            }, a.prototype.isVisible = function(t) {
                var e, n, a, o, s;
                return n = t.getAttribute("data-wow-offset") || this.config.offset, o = (s = window.pageYOffset) + this.element.clientHeight - n, e = (a = this.offsetTop(t)) + t.clientHeight, o >= a && e >= s
            }, a.prototype.util = function() {
                return this._util || (this._util = new t)
            }, a.prototype.disabled = function() {
                return !this.config.mobile && this.util().isMobile(navigator.userAgent)
            }, a
        }()
    }.call(this);